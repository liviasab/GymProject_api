generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  name          String
  email         String    @unique
  created_at    DateTime  @default(now())
  password_hash String?
  balance       Decimal   @default(0)
  role          String    @default("MEMBER")
  checkIns      CheckIn[]
  ownedGyms     Gym[]

  @@map("users")
}

model CheckIn {
  id           String     @id @default(uuid())
  created_at   DateTime   @default(now())
  validated_at DateTime?
  gym_id       String
  user_id      String
  turnstileId  String?
  gym          Gym        @relation(fields: [gym_id], references: [id])
  turnstile    Turnstile? @relation(fields: [turnstileId], references: [id])
  user         User       @relation(fields: [user_id], references: [id])

  @@map("check_ins")
}

model Gym {
  id          String      @id @default(uuid())
  title       String
  description String?
  phone       String?
  latitude    Decimal
  longitude   Decimal
  ownerId     String
  checkIns    CheckIn[]
  owner       User        @relation(fields: [ownerId], references: [id])
  turnstiles  Turnstile[]

  @@map("gyms")
}

model Turnstile {
  id       String    @id @default(uuid())
  qrCode   String    @unique
  gymId    String
  checkIns CheckIn[]
  gym      Gym       @relation(fields: [gymId], references: [id])

  @@map("turnstiles")
}
